import No from "./No";

class ListaLigada {
    constructor(){
        this.head = new No();
    }

    add(elemento){
        let novoNo = new No(elemento);
        novoNo.proximo = this.head.proximo;
        this.head.proximo = novoNo;
    }

    append(elemento){
        let novoNo = new No(elemento);
        let atual = this.head;
        while(atual.proximo !== null){
            atual = atual.proximo;
        }
        atual.proximo = novoNo;
    }
    removeLast(){
        if(!this.isEmpty()){
            let node_a = this.head;
            let node_b = this.head.proximo;
            while(node_b.proximo !== null){
                node_a = node_b;
                node_b = node_b.proximo;
            }
            node_a.proximo = null;
        }
    }

    removeFirst(){
        if(!this.isEmpty()){
            let aux;
            aux = this.head.proximo;
            this.head.proximo = aux.proximo;
        }
    }

    isEmpty(){
        return this.head.proximo === null;
    }

    length(){
        let result = 0;
        let node_b = this.head.proximo;
        while(node_b !== null){
            result++
            node_b = node_b.proximo;
        }
        return result
    }

    addAt(elemento, pos){
        if(pos < 0 || pos > this.length()) throw new Error ("Posição inválida");
        let novoNo = new No(elemento);
        let atual = this.head;
        let i = 0;

        while(i < pos){
            atual = atual.proximo;
            i++;
        }

        novoNo.proximo = atual.proximo;
        atual.proximo = novoNo;
    }
    removeAt(pos){
        if(pos < 0 || pos >= this.length()) throw new Error ("Posição inválida");
        let atual = this.head;
        let i = 0;

        while(i < pos){
            atual = atual.proximo;
            i++;
        }

        atual.proximo = atual.proximo.proximo;
    }
    search(key) {
        let atual = this.head.proximo;
    
        while (atual !== null) {
            if (atual.dado === key) {
                return true;
            }
            atual = atual.proximo;
        }
    
        return false;
    }
    
    toString() {
        let result = '';
        let node_b = this.head.proximo;
        while (node_b !== null) {
            result += node_b.dado;
            node_b = node_b.proximo;
        }
        return result;
    }
}

export default ListaLigada;